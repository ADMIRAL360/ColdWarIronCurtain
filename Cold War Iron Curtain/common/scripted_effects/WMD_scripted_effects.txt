wmd_stockpile_loc = {
	#Column 1
	set_variable = { NukeTotal = num_of_nukes  }
	set_variable = { ICBMTotal = num_equipment@icbm_equipment }
	set_variable = { IRBMTotal = num_equipment@irbm_equipment }
	set_variable = { SLBMTotal = num_equipment@slbm_equipment }
	set_variable = { SRBMTotal = num_equipment@srbm_equipment }
	#Chem
	set_variable = { MustardGasTotal = num_equipment@chemical_weapons_1 }
	set_variable = { NapalmTotal = num_equipment@napalm }
	set_variable = { SarinTotal = num_equipment@sarin }
	set_variable = { VXTotal = num_equipment@vx }
}

wmd_check_strike_missiles = {
	set_variable = { wmd_missiles_total = ICBMTotal }
	add_to_variable = { wmd_missiles_total = IRBMTotal }
	add_to_variable = { wmd_missiles_total = SLBMTotal }
	add_to_variable = { wmd_missiles_total = SRBMTotal }

	if = {
		limit = {
			check_variable = { wmd_missiles_total > 0 }
			check_variable = { NukeTotal > 0 }
		}
		set_variable = { missile_selected = 1 }
	}
	else = {
		set_variable = { missile_selected = 0}
	}
}

wmd_reset = {
	set_variable = { strike_level_tier1_selected = 0 }
	set_variable = { strike_level_tier2_selected = 0 }
	set_variable = { strike_level_tier3_selected = 0 }
	set_variable = { warhead_cost = 0 }
	set_variable = { missile_cost = 0 }
	
	#set_variable = { WMD_num_target_states = 0 } #WMD_target_states_array^num
	set_variable = { wmd_target_selected = 0 }
	set_variable = { right_key_turned = 0 }
	set_variable = { left_key_turned = 0 }
	set_variable = { wmd_ready_status = 0 }
	set_variable = { wmd_authorize = 0 }
	set_variable = { activation_code = 0 }
	set_variable = { missile_selected = 0 }
	for_each_scope_loop = {
		array = enemies
		set_variable = { THIS.checkmark = 0 }
	}
	clear_array = WMD_target_states_array
	set_variable = { wmd_num_targets_selected = 0 }
	clear_array = nuclear_power_custom_array
	every_country = {
		limit = { check_variable = { num_of_nukes > 0 } }
		add_to_array = { ROOT.nuclear_power_custom_array = THIS.id }
	}
	wmd_stockpile_loc = yes
	add_to_variable = { refresh_wmd_menu = 1 }
}

wmd_damage_loop_effect = {
	##### CIVIL DEVASTATION#####
	log = "  start loop on state: [?wmd_nuke_target_state.GetName]"
	if = { limit = { ROOT = { has_tech = atomic_weapons_armament_I } }
		log = "    reduce state category (state: [?wmd_nuke_target_state.GetName])"
		var:wmd_nuke_target_state = {
			if = { limit = { has_state_category = pop1dev1 } set_state_category = pop1 }
			if = { limit = { has_state_category = pop1dev2 } set_state_category = pop1dev1 }
			if = { limit = { has_state_category = pop1dev3 } set_state_category = pop1dev2 }
			if = { limit = { has_state_category = pop1dev4 } set_state_category = pop1dev3 }
			if = { limit = { has_state_category = pop2dev1 } set_state_category = pop2 }
			if = { limit = { has_state_category = pop2dev2 } set_state_category = pop2dev1 }
			if = { limit = { has_state_category = pop2dev3 } set_state_category = pop2dev2 }
			if = { limit = { has_state_category = pop2dev4 } set_state_category = pop2dev3 }
			if = { limit = { has_state_category = pop3dev1 } set_state_category = pop3 }
			if = { limit = { has_state_category = pop3dev2 } set_state_category = pop3dev1 }
			if = { limit = { has_state_category = pop3dev3 } set_state_category = pop3dev2 }
			if = { limit = { has_state_category = pop3dev4 } set_state_category = pop3dev3 }
			if = { limit = { has_state_category = pop4dev1 } set_state_category = pop4 }
			if = { limit = { has_state_category = pop4dev2 } set_state_category = pop4dev1 }
			if = { limit = { has_state_category = pop4dev3 } set_state_category = pop4dev2 }
			if = { limit = { has_state_category = pop4dev4 } set_state_category = pop4dev3 }
			if = { limit = { has_state_category = pop5dev1 } set_state_category = pop5 }
			if = { limit = { has_state_category = pop5dev2 } set_state_category = pop5dev1 }
			if = { limit = { has_state_category = pop5dev3 } set_state_category = pop5dev2 }
			if = { limit = { has_state_category = pop5dev4 } set_state_category = pop5dev3 }
			if = { limit = { has_state_category = pop7dev1 } set_state_category = pop7 }
			if = { limit = { has_state_category = pop7dev2 } set_state_category = pop7dev1 }
			if = { limit = { has_state_category = pop7dev3 } set_state_category = pop7dev2 }
			if = { limit = { has_state_category = pop7dev4 } set_state_category = pop7dev3 }
			if = { limit = { has_state_category = pop10dev1 } set_state_category = pop10 }
			if = { limit = { has_state_category = pop10dev2 } set_state_category = pop10dev1 }
			if = { limit = { has_state_category = pop10dev3 } set_state_category = pop10dev2 }
			if = { limit = { has_state_category = pop10dev4 } set_state_category = pop10dev3 }
			if = { limit = { has_state_category = pop15dev1 } set_state_category = pop15 }
			if = { limit = { has_state_category = pop15dev2 } set_state_category = pop15dev1 }
			if = { limit = { has_state_category = pop15dev3 } set_state_category = pop15dev2 }
			if = { limit = { has_state_category = pop15dev4 } set_state_category = pop15dev3 }
			if = { limit = { has_state_category = pop20dev1 } set_state_category = pop20 }
			if = { limit = { has_state_category = pop20dev2 } set_state_category = pop20dev1 }
			if = { limit = { has_state_category = pop20dev3 } set_state_category = pop20dev2 }
			if = { limit = { has_state_category = pop20dev4 } set_state_category = pop20dev3 }
		}
	}

	#####ARMAMENT/DELIVERY POPULATION AND RADS#####
	# Apply Rads to state based on atomic_weapons_armament tech lvl
	# and set manpower reduction factor based on atomic_weapons_armament tech lvl
	set_temp_variable = { tempManpowerReductionFactor = 0 }
	if = { limit = { ROOT = { has_tech = atomic_weapons_armament_0 NOT = { has_tech = atomic_weapons_armament_I } } }
		log = "    reduce manpower factor for ARMAMENT 0 = 1 / add 36 rads to state"
		add_to_temp_variable = { tempManpowerReductionFactor = 1 }
		add_to_variable = { var = radiation value = 36 }
	}
	else_if = { limit = { ROOT = { has_tech = atomic_weapons_armament_I NOT = { has_tech = atomic_weapons_armament_II } } }
		log = "    reduce manpower factor for ARMAMENT I = 2 / add 48 rads to state (36 to neighbor states)"
		add_to_temp_variable = { tempManpowerReductionFactor = 2 }
		add_to_variable = { var = radiation value = 48 }
		every_neighbor_state = { add_to_variable = { var = radiation value = 36 } }
	}
	else_if = { limit = { ROOT = { has_tech = atomic_weapons_armament_II } }
		log = "    reduce manpower factor for ARMAMENT II = 6 / add 80 rads to state (64 to neighbor states)"
		add_to_temp_variable = { tempManpowerReductionFactor = 6 }
		add_to_variable = { var = radiation value = 80 }
		every_neighbor_state = { add_to_variable = { var = radiation value = 64 } }
	}
	####
	# add to manpower reduction factor based on atomic_weapons_delivery tech lvl
	if = { limit = { ROOT = { has_tech = atomic_weapons_delivery_I NOT = { has_tech = atomic_weapons_delivery_III } } }
		log = "    reduce manpower factor for DELIVERY I = 1"
		add_to_temp_variable = { tempManpowerReductionFactor = 1 }
	}
	else_if = { limit = { ROOT = { has_tech = atomic_weapons_delivery_III NOT = { has_tech = atomic_weapons_delivery_V } } }
		log = "    reduce manpower factor for DELIVERY III = 2"
		add_to_temp_variable = { tempManpowerReductionFactor = 2 }
	}
	else_if = { limit = { ROOT = { has_tech = atomic_weapons_delivery_V } }
		log = "    reduce manpower factor for DELIVERY V = 6"
		add_to_temp_variable = { tempManpowerReductionFactor = 6 }
	}
	log = "   total manpower factor from techs = [?tempManpowerReductionFactor]"
	
	# Reduce manpower on state based on state pop and reduction factor from atomic_weapons_armament
	if = { limit = { var:wmd_nuke_target_state = { state_population > 50000 state_population < 100001 } }
		set_temp_variable = { tempManpowerReduction = 1000 }
		multiply_temp_variable = { tempManpowerReduction = tempManpowerReductionFactor }
		var:wmd_nuke_target_state = { add_manpower = tempManpowerReduction }
	}
	else_if = { limit = { var:wmd_nuke_target_state = { state_population > 100000 state_population < 1000001 } }
		set_temp_variable = { tempManpowerReduction = 10000 }
		multiply_temp_variable = { tempManpowerReduction = tempManpowerReductionFactor }
		var:wmd_nuke_target_state = { add_manpower = tempManpowerReduction }
	}
	else_if = { limit = { var:wmd_nuke_target_state = { state_population > 1000000 state_population < 2000001 } }
		set_temp_variable = { tempManpowerReduction = 25000 }
		multiply_temp_variable = { tempManpowerReduction = tempManpowerReductionFactor }
		var:wmd_nuke_target_state = { add_manpower = tempManpowerReduction }
	}
	else_if = { limit = { var:wmd_nuke_target_state = { state_population > 2000000 state_population < 5000001 } }
		set_temp_variable = { tempManpowerReduction = 50000 }
		multiply_temp_variable = { tempManpowerReduction = tempManpowerReductionFactor }
		var:wmd_nuke_target_state = { add_manpower = tempManpowerReduction }
	}
	else_if = { limit = { var:wmd_nuke_target_state = { state_population > 5000000 state_population < 1000001 } }
		set_temp_variable = { tempManpowerReduction = 100000 }
		multiply_temp_variable = { tempManpowerReduction = tempManpowerReductionFactor }
		var:wmd_nuke_target_state = { add_manpower = tempManpowerReduction }
	}
	else_if = { limit = { var:wmd_nuke_target_state = { state_population > 10000000 } }
		set_temp_variable = { tempManpowerReduction = 150000 }
		multiply_temp_variable = { tempManpowerReduction = tempManpowerReductionFactor }
		var:wmd_nuke_target_state = { add_manpower = tempManpowerReduction }
	}
	log = "   total manpower reduction from techs = [?tempManpowerReduction]"

	#####ARMAMENT BUILDING DAMAGE#####
	if = {
		limit = {
			ROOT = { has_tech = atomic_weapons_armament_0 }
			NOT = { ROOT = { has_tech = atomic_weapons_armament_I } }
			#NOT = { var:wmd_nuke_target_state = { nuclear_bunker > 0 } }
		}
		log = "    building damage: atomic_weapons_armament_0 (state: [?wmd_nuke_target_state.GetName])"
		set_temp_variable = { basic_destroy = 1 }
		set_temp_variable = { advanced_destroy = 1 }
		set_temp_variable = { infrastructure_destroy = 1 }
		set_temp_variable = { facilities_destroy = 2 }
		set_temp_variable = { basic_damage = 6 }
		set_temp_variable = { advanced_damage = 3 }
		set_temp_variable = { infrastructure_damage = 2 }
		set_temp_variable = { facilities_damage = 4 }
	}
	else_if = {
		limit = {
			ROOT = { has_tech = atomic_weapons_armament_I }
			NOT = { ROOT = { has_tech = atomic_weapons_armament_II } }
			#NOT = { var:wmd_nuke_target_state = { nuclear_bunker > 0 } }
		}
		log = "    building damage: atomic_weapons_armament_I (state: [?wmd_nuke_target_state.GetName])"
		set_temp_variable = { basic_destroy = 2 }
		set_temp_variable = { advanced_destroy = 2 }
		set_temp_variable = { infrastructure_destroy = 2 }
		set_temp_variable = { facilities_destroy = 4 }
		set_temp_variable = { basic_damage = 12 }
		set_temp_variable = { advanced_damage = 6 }
		set_temp_variable = { infrastructure_damage = 4 }
		set_temp_variable = { facilities_damage = 8 }
	}
	else_if = {
		limit = {
			ROOT = { has_tech = atomic_weapons_armament_II }
			#NOT = { var:wmd_nuke_target_state = { nuclear_bunker > 0 } }
		}
		log = "    building damage: atomic_weapons_armament_II (state: [?wmd_nuke_target_state.GetName])"
		set_temp_variable = { basic_destroy = 3 }
		set_temp_variable = { advanced_destroy = 3 }
		set_temp_variable = { infrastructure_destroy = 3 }
		set_temp_variable = { facilities_destroy = 6 }
		set_temp_variable = { basic_damage = 18 }
		set_temp_variable = { advanced_damage = 9 }
		set_temp_variable = { infrastructure_damage = 6 }
		set_temp_variable = { facilities_damage = 12 }
	}
	var:wmd_nuke_target_state = {
		remove_building = { type = arms_factory level = basic_destroy }
		remove_building = { type = industrial_complex level = basic_destroy }
		remove_building = { type = dockyard level = basic_destroy }
		remove_building = { type = office_park level = basic_destroy }
		remove_building = { type = agri_industrial_complex level = basic_destroy }
		remove_building = { type = infrastructure level = infrastructure_destroy }
		remove_building = { type = state_infrastructure damage = infrastructure_destroy }
		remove_building = { type = water_infrastructure level = infrastructure_destroy }
		remove_building = { type = air_base level = facilities_destroy }
		damage_building = { type = arms_factory damage = basic_damage }
		damage_building = { type = industrial_complex damage = basic_damage }
		damage_building = { type = dockyard damage = basic_damage }
		damage_building = { type = office_park damage = basic_damage }
		damage_building = { type = agri_industrial_complex damage = basic_damage }
		damage_building = { type = infrastructure damage = infrastructure_damage }
		damage_building = { type = state_infrastructure damage = infrastructure_damage }
		damage_building = { type = water_infrastructure level = infrastructure_damage }
		damage_building = { type = air_base damage = facilities_damage }
	}
}
